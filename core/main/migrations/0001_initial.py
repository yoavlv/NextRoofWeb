# Generated by Django 4.2.4 on 2023-10-04 10:43

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Deals',
            fields=[
                ('id',
                 models.BigAutoField(auto_created=True,
                                     primary_key=True,
                                     serialize=False,
                                     verbose_name='ID')),
                ('street', models.TextField(blank=True, null=True)),
                ('home_number', models.FloatField(blank=True, null=True)),
                ('item_id', models.TextField(blank=True, null=True)),
                ('lat', models.FloatField(blank=True, null=True)),
                ('long', models.FloatField(blank=True, null=True)),
                ('rooms', models.FloatField(blank=True, null=True)),
                ('neighborhood', models.TextField(blank=True, null=True)),
                ('floor', models.FloatField(blank=True, null=True)),
                ('build_year', models.IntegerField(blank=True, null=True)),
                ('size', models.FloatField(blank=True, null=True)),
                ('price', models.IntegerField(blank=True, null=True)),
                ('new', models.TextField(blank=True, null=True)),
                ('last_update', models.TextField(blank=True, null=True)),
                ('asset_type', models.TextField(blank=True, null=True)),
                ('gush', models.IntegerField(blank=True, null=True)),
                ('helka', models.IntegerField(blank=True, null=True)),
                ('tat', models.TextField(blank=True, null=True)),
                ('floors', models.FloatField(blank=True, null=True)),
                ('year', models.IntegerField(blank=True, null=True)),
                ('neighborhood_rank', models.IntegerField(blank=True,
                                                          null=True)),
                ('street_rank', models.IntegerField(blank=True, null=True)),
                ('gush_rank', models.IntegerField(blank=True, null=True)),
                ('helka_rank', models.IntegerField(blank=True, null=True)),
                ('gush_helka',
                 models.CharField(blank=True, max_length=30, null=True)),
                ('age', models.IntegerField(blank=True, null=True)),
                ('predicted', models.IntegerField(blank=True, null=True)),
                ('difference', models.IntegerField(blank=True, null=True)),
                ('source',
                 models.CharField(blank=True, max_length=30, null=True)),
                ('images', models.TextField(blank=True, null=True)),
                ('city', models.CharField(blank=True,
                                          max_length=255,
                                          null=True)),
                ('storage', models.BooleanField(blank=True, null=True)),
                ('elevators', models.BooleanField(blank=True, null=True)),
                ('protected_space', models.BooleanField(blank=True,
                                                        null=True)),
                ('furniture', models.BooleanField(blank=True, null=True)),
                ('balcony', models.BooleanField(blank=True, null=True)),
                ('accessibility', models.BooleanField(blank=True, null=True)),
                ('renovated', models.BooleanField(blank=True, null=True)),
                ('updated', models.DateTimeField(blank=True, null=True)),
                ('created', models.DateTimeField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('agent',
                 models.CharField(blank=True, max_length=255, null=True)),
                ('pets_allowed', models.BooleanField(blank=True, null=True)),
                ('is_verified', models.BooleanField(blank=True, null=True)),
                ('status',
                 models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'deals',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id',
                 models.BigAutoField(auto_created=True,
                                     primary_key=True,
                                     serialize=False,
                                     verbose_name='ID')),
                ('city', models.CharField(max_length=100)),
                ('phone_number', models.CharField(max_length=15)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('user_type',
                 models.CharField(choices=[('buyer', 'Buyer'),
                                           ('seller', 'Seller'),
                                           ('agent', 'Agent')],
                                  default='buyer',
                                  max_length=10)),
                ('is_verified', models.BooleanField(default=False)),
                ('subscribed_to_newsletter',
                 models.BooleanField(default=True)),
                ('company',
                 models.CharField(blank=True, max_length=255, null=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('premium', models.BooleanField(default=False)),
                ('history',
                 models.ManyToManyField(blank=True,
                                        null=True,
                                        related_name='viewed_by_users',
                                        to='main.deals')),
                ('property',
                 models.ForeignKey(blank=True,
                                   null=True,
                                   on_delete=django.db.models.deletion.CASCADE,
                                   related_name='listed_properties',
                                   to='main.deals')),
                ('saved',
                 models.ManyToManyField(blank=True,
                                        null=True,
                                        related_name='saved_by_users',
                                        to='main.deals')),
                ('user',
                 models.OneToOneField(
                     on_delete=django.db.models.deletion.CASCADE,
                     to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'userprofile',
                'ordering': ['-updated', '-created'],
            },
        ),
    ]
